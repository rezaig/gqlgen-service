package gqlsvc

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.45

import (
	"context"
	"fmt"

	"github.com/rezaindra/gqlgen-todos/internal/delivery/gqlsvc/generated"
	"github.com/rezaindra/gqlgen-todos/internal/delivery/gqlsvc/gqlmodel"
	"github.com/rezaindra/gqlgen-todos/internal/model"
)

// Users is the resolver for the users field.
func (r *queryResolver) Users(ctx context.Context) ([]*model.User, error) {
	panic(fmt.Errorf("not implemented: Users - users"))
}

// Foo is the resolver for the foo field.
func (r *userResolver) Foo(ctx context.Context, obj *model.User) (*gqlmodel.Foo, error) {
	panic(fmt.Errorf("not implemented: Foo - foo"))
}

// User returns generated.UserResolver implementation.
func (r *Resolver) User() generated.UserResolver { return &userResolver{r} }

type userResolver struct{ *Resolver }
